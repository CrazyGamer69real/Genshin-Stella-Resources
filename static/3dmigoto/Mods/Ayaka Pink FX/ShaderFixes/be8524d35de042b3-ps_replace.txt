// ---- Created with 3Dmigoto v1.3.16 on Fri Apr 14 04:13:37 2023
Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb0 : register(b0)
{
  float4 cb0[34];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);
#define ACTIVE IniParams[160].x


void main(
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  linear sample float4 v2 : TEXCOORD1,
  linear sample float4 v3 : TEXCOORD2,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cmp(cb0[33].x == 1.000000);
  if (r0.x != 0) {
    r0.x = t0.Sample(s0_s, v1.xy).w;
    r0.x = -cb0[33].y + r0.x;
    r0.x = cmp(r0.x < 0);
    if (r0.x != 0) discard;
  }
  r0.xy = v2.xy / v2.ww;
  r0.zw = v3.xy / v3.ww;
  r0.xy = float2(1,1) + r0.xy;
  r1.x = 0.5 * r0.x;
  r0.xz = float2(1,1) + r0.zw;
  r2.x = 0.5 * r0.x;
  r2.z = -r0.z * 0.5 + 1;
  r1.z = -r0.y * 0.5 + 1;
  r0.xy = -r2.xz + r1.xz;
  r0.z = cb0[32].y ? 1 : 0;
  r0.xy = r0.zz * -r0.xy + r0.xy;
  r0.zw = sqrt(abs(r0.xy));
  r1.xy = cmp(float2(0,0) < r0.xy);
  r0.xy = cmp(r0.xy < float2(0,0));
  r0.xy = (int2)-r1.xy + (int2)r0.xy;
  r0.xy = (int2)r0.xy;
  r0.xy = r0.zw * r0.xy;
  o0.xy = r0.xy * float2(0.5,0.5) + float2(0.498039216,0.498039216);
  r0.x = cmp(cb0[32].w < 0.949999988);
  o0.w = r0.x ? 1.000000 : 0;
  o0.z = 1;
if (ACTIVE == 1) {  
  float orig = o0.z;
  o0.z = 1 + o0.x;
  o0.x = 0.5 + orig;
}  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Apr 14 04:13:37 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xy w
// TEXCOORD                 2   xyzw        3     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[34], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear sample v2.xyw
dcl_input_ps linear sample v3.xyw
dcl_output o0.xyzw
dcl_temps 3
eq r0.x, cb0[33].x, l(1.000000)
if_nz r0.x
  sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t0.wxyz, s0
  add r0.x, r0.x, -cb0[33].y
  lt r0.x, r0.x, l(0.000000)
  discard_nz r0.x
endif
div r0.xy, v2.xyxx, v2.wwww
div r0.zw, v3.xxxy, v3.wwww
add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.x, r0.x, l(0.500000)
add r0.xz, r0.zzwz, l(1.000000, 0.000000, 1.000000, 0.000000)
mul r2.x, r0.x, l(0.500000)
mad r2.z, -r0.z, l(0.500000), l(1.000000)
mad r1.z, -r0.y, l(0.500000), l(1.000000)
add r0.xy, r1.xzxx, -r2.xzxx
movc r0.z, cb0[32].y, l(1.000000), l(0)
mad r0.xy, r0.zzzz, -r0.xyxx, r0.xyxx
sqrt r0.zw, |r0.xxxy|
lt r1.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyxx
lt r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
iadd r0.xy, -r1.xyxx, r0.xyxx
itof r0.xy, r0.xyxx
mul r0.xy, r0.xyxx, r0.zwzz
mad o0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.498039216, 0.498039216, 0.000000, 0.000000)
lt r0.x, cb0[32].w, l(0.950000)
and o0.w, r0.x, l(0x3f800000)
mov o0.z, l(1.000000)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
