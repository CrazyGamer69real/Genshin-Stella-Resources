// ---- Created with 3Dmigoto v1.3.16 on Fri Apr 14 04:13:11 2023
Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[46];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[9];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[82];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);
#define ACTIVE IniParams[160].x


void main(
  float4 v0 : SV_POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  float4 v5 : TEXCOORD5,
  float4 v6 : TEXCOORD6,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = dot(v6.xyz, v6.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = v6.xyz * r0.xxx;
  r1.x = r0.y * r0.y;
  r1.x = r0.x * r0.x + -r1.x;
  r2.xyzw = r0.xyzz * r0.yzzx;
  r3.x = dot(cb2[42].xyzw, r2.xyzw);
  r3.y = dot(cb2[43].xyzw, r2.xyzw);
  r3.z = dot(cb2[44].xyzw, r2.xyzw);
  r1.xyz = cb2[45].xyz * r1.xxx + r3.xyz;
  r0.w = 1;
  r2.x = dot(cb2[39].xyzw, r0.xyzw);
  r2.y = dot(cb2[40].xyzw, r0.xyzw);
  r2.z = dot(cb2[41].xyzw, r0.xyzw);
  r0.xyz = saturate(r2.xyz + r1.xyz);
  r1.xyz = v4.xyz + -v3.xyz;
  r0.w = cmp(cb0[75].x == 4.000000);
  r0.w = r0.w ? 1.000000 : 0;
  r2.xyzw = cmp(cb0[75].xxxx == float4(0,1,2,3));
  r3.xyzw = t0.Sample(s0_s, v2.xy).xyzw;
  r0.w = r2.w ? r3.w : r0.w;
  r0.w = r2.z ? r3.z : r0.w;
  r0.w = r2.y ? r3.y : r0.w;
  r0.w = r2.x ? r3.x : r0.w;
  r1.xyz = r0.www * r1.xyz + v3.xyz;
  r1.xyz = -cb0[72].xyz + r1.xyz;
  r1.xyz = cb0[71].yyy * r1.xyz + cb0[72].xyz;
  r1.xyz = cb0[71].xxx * r1.xyz;
  r1.xyz = v1.xyz * r1.xyz;
  r1.xyz = cb0[77].xyz * r1.xyz;
  r1.xyz = r1.xyz + r1.xyz;
  r0.xyz = r0.xyz * r1.xyz + -r1.xyz;
  r0.xyz = cb0[81].www * r0.xyz + r1.xyz;
  r0.w = cmp(cb0[81].z == 1.000000);
  o0.xyz = r0.www ? r0.xyz : r1.xyz;
  r0.x = cmp(cb0[78].x == 4.000000);
  r0.x = r0.x ? 1.000000 : 0;
  r1.xyzw = cmp(cb0[78].xxxx == float4(0,1,2,3));
  r0.x = r1.w ? r3.w : r0.x;
  r0.x = r1.z ? r3.z : r0.x;
  r0.x = r1.y ? r3.y : r0.x;
  r0.x = r1.x ? r3.x : r0.x;
  r0.y = cb0[72].w * v1.w;
  r0.x = r0.y * r0.x;
  r0.yz = v5.xy / v5.ww;
  r0.y = t1.Sample(s1_s, r0.yz).x;
  r0.y = cb1[8].z * r0.y + cb1[8].w;
  r0.y = 1 / r0.y;
  r0.y = -v5.w + r0.y;
  r0.z = saturate(r0.y / cb0[78].z);
  r0.y = saturate(cb0[78].y * r0.y);
  r0.w = 1 + -r0.y;
  r0.y = r0.z * r0.w + r0.y;
  r0.x = r0.x * r0.y;
  r0.x = saturate(dot(r0.xx, cb0[78].ww));
  r0.x = cb0[77].w * r0.x;
  o0.w = cb0[81].y * r0.x * 0.01;
if (ACTIVE == 1) {  
  float orig = o0.z;
  o0.z = 2 + o0.x;
  o0.x = orig;
}  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Apr 14 04:13:11 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy
// TEXCOORD                 1   xyzw        3     NONE   float   xyz
// TEXCOORD                 2   xyzw        4     NONE   float   xyz
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[82], immediateIndexed
dcl_constantbuffer CB1[9], immediateIndexed
dcl_constantbuffer CB2[46], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 4
dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v6.xyzx
mul r1.x, r0.y, r0.y
mad r1.x, r0.x, r0.x, -r1.x
mul r2.xyzw, r0.yzzx, r0.xyzz
dp4 r3.x, cb2[42].xyzw, r2.xyzw
dp4 r3.y, cb2[43].xyzw, r2.xyzw
dp4 r3.z, cb2[44].xyzw, r2.xyzw
mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
mov r0.w, l(1.000000)
dp4 r2.x, cb2[39].xyzw, r0.xyzw
dp4 r2.y, cb2[40].xyzw, r0.xyzw
dp4 r2.z, cb2[41].xyzw, r0.xyzw
add_sat r0.xyz, r1.xyzx, r2.xyzx
add r1.xyz, -v3.xyzx, v4.xyzx
eq r0.w, cb0[75].x, l(4.000000)
and r0.w, r0.w, l(0x3f800000)
eq r2.xyzw, cb0[75].xxxx, l(0.000000, 1.000000, 2.000000, 3.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v2.xyxx, t0.xyzw, s0
movc r0.w, r2.w, r3.w, r0.w
movc r0.w, r2.z, r3.z, r0.w
movc r0.w, r2.y, r3.y, r0.w
movc r0.w, r2.x, r3.x, r0.w
mad r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
add r1.xyz, r1.xyzx, -cb0[72].xyzx
mad r1.xyz, cb0[71].yyyy, r1.xyzx, cb0[72].xyzx
mul r1.xyz, r1.xyzx, cb0[71].xxxx
mul r1.xyz, r1.xyzx, v1.xyzx
mul r1.xyz, r1.xyzx, cb0[77].xyzx
add r1.xyz, r1.xyzx, r1.xyzx
mad r0.xyz, r0.xyzx, r1.xyzx, -r1.xyzx
mad r0.xyz, cb0[81].wwww, r0.xyzx, r1.xyzx
eq r0.w, cb0[81].z, l(1.000000)
movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx
eq r0.x, cb0[78].x, l(4.000000)
and r0.x, r0.x, l(0x3f800000)
eq r1.xyzw, cb0[78].xxxx, l(0.000000, 1.000000, 2.000000, 3.000000)
movc r0.x, r1.w, r3.w, r0.x
movc r0.x, r1.z, r3.z, r0.x
movc r0.x, r1.y, r3.y, r0.x
movc r0.x, r1.x, r3.x, r0.x
mul r0.y, v1.w, cb0[72].w
mul r0.x, r0.x, r0.y
div r0.yz, v5.xxyx, v5.wwww
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t1.yxzw, s1
mad r0.y, cb1[8].z, r0.y, cb1[8].w
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.y, r0.y, -v5.w
div_sat r0.z, r0.y, cb0[78].z
mul_sat r0.y, r0.y, cb0[78].y
add r0.w, -r0.y, l(1.000000)
mad r0.y, r0.z, r0.w, r0.y
mul r0.x, r0.y, r0.x
dp2_sat r0.x, r0.xxxx, cb0[78].wwww
mul r0.x, r0.x, cb0[77].w
mul o0.w, r0.x, cb0[81].y
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
